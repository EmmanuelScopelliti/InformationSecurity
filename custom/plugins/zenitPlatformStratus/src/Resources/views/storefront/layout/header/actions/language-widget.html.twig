{% sw_extends '@Storefront/storefront/layout/header/actions/language-widget.html.twig' %}

{% block layout_header_actions_language_widget_content %}
    {% set languageText = theme_config('zen-top-bar-language-widget-text') ?: 'standard' %}

    {% if theme_config('zen-top-bar-language-widget-flag') is null %}
        {# fallback for older child-themes without this config #}
        {% set languageFlag = true %}
    {% else %}
        {% set languageFlag = theme_config('zen-top-bar-language-widget-flag') %}
    {% endif %}

    {% set isoCode = page.header.activeLanguage.translationCode.code|lower|split('-') %}
    {# @deprecated tag:v6.5.0 - Remove else cases, to maintain correct split of isoCode #}
    {% set language = feature('v6.5.0.0') ? isoCode[0] : isoCode[1] %}
    {% set country = feature('v6.5.0.0') ? isoCode[1] : isoCode[0] %}

<div class="languages-menu dropdown">
    <button class="btn dropdown-toggle top-bar-nav-btn"
            type="button"
            id="languagesDropdown-{{ position }}"
                data-toggle="dropdown"
                aria-haspopup="true"
                aria-expanded="false">

            {% if languageFlag %}
                <div class="top-bar-list-icon language-flag country-{{ country }} language-{{ language }}"></div>
            {% endif %}
            {% if languageText is same as ('standard') %}
                <span class="top-bar-nav-text">{{ page.header.activeLanguage.name }}</span>
            {% elseif languageText is same as ('isoCodeShort') %}
                <span class="top-bar-nav-text">{{ country }}</span>
            {% elseif languageText is same as ('isoCodeFull') %}
                <span class="top-bar-nav-text">{{ country }}-{{ language|upper }}</span>
            {% endif %}
        </button>
        {% block layout_header_actions_languages_widget_form_items %}
            <div class="top-bar-list dropdown-menu dropdown-menu-right"
                 aria-labelledby="languagesDropdown-{{ position }}">
                {% for language in  page.header.languages %}
                    <div class="top-bar-list-item dropdown-item{% if language.id is same as(page.header.activeLanguage.id) %} item-checked{% endif %}"
                         title="{{ language.translated.name }}">

                        {% block layout_header_actions_languages_widget_form_items_flag %}
                            {% set isoCode = language.translationCode.code|lower|split('-') %}
                            {# @deprecated tag:v6.5.0 - Remove else cases, to maintain correct split of isoCode #}
                            {% set flagLanguage = feature('v6.5.0.0') ? isoCode[0] : isoCode[1] %}
                            {% set flagCountry = feature('v6.5.0.0') ? isoCode[1] : isoCode[0] %}

                            <label class="top-bar-list-label"
                                   for="{{ position }}-{{ language.id }}">
                                <input id="{{ position }}-{{ language.id }}"
                                       class="top-bar-list-radio"
                                       value="{{ language.id }}"
                                       name="languageId"
                                       type="radio"
                                    {% if language.id is same as(page.header.activeLanguage.id) %} checked{% endif %}>

                                {% if languageFlag %}
                                    <div class="top-bar-list-icon language-flag country-{{ flagCountry }} language-{{ flagLanguage }}"></div>
                                {% endif %}

                                {% if languageText is same as ('standard') %}
                                    {{ language.name }}
                                {% elseif languageText is same as ('isoCodeShort') %}
                                    {{ flagCountry }}
                                {% elseif languageText is same as ('isoCodeFull') %}
                                    {{ flagCountry }}-{{ flagLanguage|upper }}
                                {% endif %}
                            </label>
                        {% endblock %}
                    </div>
                {% endfor %}
            </div>
        {% endblock %}
    </div>

    <input name="redirectTo" type="hidden" value="{{ app.request.get('_route') }}"/>

    {% for key, value in app.request.attributes.get('_route_params') %}
        <input name="redirectParameters[{{ key }}]" type="hidden" value="{{ value }}">
    {% endfor %}
{% endblock %}
