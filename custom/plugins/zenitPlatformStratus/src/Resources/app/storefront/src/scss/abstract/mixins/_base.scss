@mixin text-color-contrast {
    @if $zen-container-bg == transparent {
        color: color-yiq($body-bg, $sw-text-color, $zen-light-text-color)
    } @else {
        color: color-yiq($zen-container-bg, $sw-text-color, $zen-light-text-color)
    }
}

@mixin headline-color-contrast {
    @if $zen-container-bg == transparent {
        color: color-yiq($body-bg, $headings-color, $zen-light-headline-color)
    } @else {
        color: color-yiq($zen-container-bg, $headings-color, $zen-light-headline-color)
    }
}

@mixin layout-vertical-padding {
    padding-top: ($zen-layout-padding-top-mobile * .25px);
    padding-bottom: ($zen-layout-padding-bottom-mobile * .25px);

    @include media-breakpoint-up(sm) {
        padding-top: ($zen-layout-padding-top-mobile * .5px);
        padding-bottom: ($zen-layout-padding-bottom-mobile * .5px);
    }

    @include media-breakpoint-up(md) {
        padding-top: ($zen-layout-padding-top-mobile * 1px);
        padding-bottom: ($zen-layout-padding-bottom-mobile * 1px);
    }

    @include media-breakpoint-up(lg) {
        padding-top: ($zen-layout-padding-top * .5px);
        padding-bottom: ($zen-layout-padding-bottom * .5px);
    }

    @include media-breakpoint-up(xl) {
        padding-top: ($zen-layout-padding-top * 1px);
        padding-bottom: ($zen-layout-padding-bottom * 1px);
    }
}

@mixin layout-horizontal-padding {
    padding-left: ($zen-layout-padding-left-mobile * .25px);
    padding-right: ($zen-layout-padding-right-mobile * .25px);

    @include media-breakpoint-up(sm) {
        padding-left: ($zen-layout-padding-left-mobile * .5px);
        padding-right: ($zen-layout-padding-right-mobile * .5px);
    }

    @include media-breakpoint-up(md) {
        padding-left: ($zen-layout-padding-left-mobile * 1px);
        padding-right: ($zen-layout-padding-right-mobile * 1px);
    }

    @include media-breakpoint-up(lg) {
        padding-left: ($zen-layout-padding-left * .5px);
        padding-right: ($zen-layout-padding-right * .5px);
    }

    @include media-breakpoint-up(xl) {
        padding-left: ($zen-layout-padding-left * 1px);
        padding-right: ($zen-layout-padding-right * 1px);
    }
}

@mixin layout-negative-vertical-padding {
    margin-top: ($zen-layout-padding-top-mobile * -.25px);
    margin-bottom: ($zen-layout-padding-bottom-mobile * -.25px);

    @include media-breakpoint-up(sm) {
        margin-top: ($zen-layout-padding-top-mobile * -.5px);
        margin-bottom: ($zen-layout-padding-bottom-mobile * -.5px);
    }

    @include media-breakpoint-up(md) {
        margin-top: ($zen-layout-padding-top-mobile * -1px);
        margin-bottom: ($zen-layout-padding-bottom-mobile * -1px);
    }

    @include media-breakpoint-up(lg) {
        margin-top: ($zen-layout-padding-top * -.5px);
        margin-bottom: ($zen-layout-padding-bottom * -.5px);
    }

    @include media-breakpoint-up(xl) {
        margin-top: ($zen-layout-padding-top * -1px);
        margin-bottom: ($zen-layout-padding-bottom * -1px);
    }
}

@mixin layout-negative-horizontal-padding {
    margin-left: ($zen-layout-padding-left-mobile * -.25px);
    margin-right: ($zen-layout-padding-right-mobile * -.25px);

    @include media-breakpoint-up(sm) {
        margin-left: ($zen-layout-padding-left-mobile * -.5px);
        margin-right: ($zen-layout-padding-right-mobile * -.5px);
    }

    @include media-breakpoint-up(md) {
        margin-left: ($zen-layout-padding-left-mobile * -1px);
        margin-right: ($zen-layout-padding-right-mobile * -1px);
    }

    @include media-breakpoint-up(lg) {
        margin-left: ($zen-layout-padding-left * -.5px);
        margin-right: ($zen-layout-padding-right * -.5px);
    }

    @include media-breakpoint-up(xl) {
        margin-left: ($zen-layout-padding-left * -1px);
        margin-right: ($zen-layout-padding-right * -1px);
    }
}

@mixin layout-container-horizontal-padding($gutter-right: $grid-gutter-width, $gutter-left: $grid-gutter-width) {
    // ... make sure grid .row negative margin is not larger than gutter
    $gutter-sm-right: if($gutter-right / 2 < $grid-gutter-single-width, $grid-gutter-single-width, $gutter-right / 2);
    $gutter-sm-left: if($gutter-left / 2 < $grid-gutter-single-width, $grid-gutter-single-width, $gutter-left / 2);

    padding-right: $gutter-sm-right;
    padding-left: $gutter-sm-left;

    @include media-breakpoint-up(lg) {
        padding-right: $gutter-right;
        padding-left: $gutter-left;
    }
}

@mixin layout-container-vertical-padding($gutter-top: $grid-gutter-width, $gutter-bottom: $grid-gutter-width) {
    // ... make sure grid .row negative margin is not larger than gutter
    $gutter-sm-top: if($gutter-top / 2 < $grid-gutter-single-width, $grid-gutter-single-width, $gutter-top / 2);
    $gutter-sm-bottom: if($gutter-bottom / 2 < $grid-gutter-single-width, $grid-gutter-single-width, $gutter-bottom / 2);

    padding-top: $gutter-sm-top;
    padding-bottom: $gutter-sm-bottom;

    @include media-breakpoint-up(lg) {
        padding-top: $gutter-top;
        padding-bottom: $gutter-bottom;
    }
}

@mixin layout-container-negative-horizontal-margin($gutter-right: $grid-gutter-width, $gutter-left: $grid-gutter-width) {
    // ... make sure grid .row negative margin is not larger than gutter
    $gutter-sm-right: if($gutter-right / 2 < $grid-gutter-single-width, $grid-gutter-single-width, $gutter-right / 2);
    $gutter-sm-left: if($gutter-left / 2 < $grid-gutter-single-width, $grid-gutter-single-width, $gutter-left / 2);

    margin-right: -$gutter-sm-right;
    margin-left: -$gutter-sm-left;

    @include media-breakpoint-up(lg) {
        margin-right: -$gutter-right;
        margin-left: -$gutter-left;
    }
}

@mixin layout-container-negative-vertical-margin($gutter-top: $grid-gutter-width, $gutter-bottom: $grid-gutter-width) {
    // ... make sure grid .row negative margin is not larger than gutter
    $gutter-sm-top: if($gutter-top / 2 < $grid-gutter-single-width, $grid-gutter-single-width, $gutter-top / 2);
    $gutter-sm-bottom: if($gutter-bottom / 2 < $grid-gutter-single-width, $grid-gutter-single-width, $gutter-bottom / 2);

    margin-top: -$gutter-sm-top;
    margin-bottom: -$gutter-sm-bottom;

    @include media-breakpoint-up(lg) {
        margin-top: -$gutter-top;
        margin-bottom: -$gutter-bottom;
    }
}

@mixin layout-container-horizontal-margin($gutter-right: $grid-gutter-width, $gutter-left: $grid-gutter-width) {
    margin-right: $gutter-right / 2;
    margin-left: $gutter-left / 2;

    @include media-breakpoint-up(lg) {
        margin-right: $gutter-right;
        margin-left: $gutter-left;
    }
}

@mixin layout-container-vertical-margin($gutter-top: $grid-gutter-width, $gutter-bottom: $grid-gutter-width) {
    margin-top: $gutter-top / 2;
    margin-bottom: $gutter-bottom / 2;

    @include media-breakpoint-up(lg) {
        margin-top: $gutter-top;
        margin-bottom: $gutter-bottom;
    }
}
